#!/usr/bin/perl -w

#=======================================================================
# $Id$
# Uses a specified diff program for viewing differences in a Subversion 
# versioned directory tree.
#
# Character set: UTF-8
# License: GNU General Public License, see end of file for legal stuff.
# ©opyleft 2004– Øyvind A. Holm <sunny@sunbase.org>
# This file is part of the svnutils project — http://svnutils.tigris.org
#=======================================================================

use strict;

$| = 1;

use Getopt::Std;
our ($opt_C, $opt_c, $opt_e, $opt_h, $opt_p) =
    (     0,     "",     "",      0,     "");
getopts('Cc:e:hp:') || die("Option error. Use -h for help.\n");

# Change this to the default diff command to use
my $Cmd = "vimdiff";

my $Debug = 0;

# Change this if the svn executable is non-standard and you don’t want 
# to use the -e option all the time:
my $CMD_SVN = "svn";

my $ST_CONFLICT = 'C';
my $ST_MODIFIED = 'M';

our $progname = $0;
$progname =~ s#^(.*)/(.+?)$#$2#;

$opt_h && usage(0);

length($opt_c) && ($Cmd = $opt_c);
length($opt_p) && ($Cmd .= " $opt_p");
length($opt_e) && ($CMD_SVN = $opt_e);

my $stat_chars = "$ST_CONFLICT$ST_MODIFIED";
$opt_C && ($stat_chars = "$ST_CONFLICT");

my @mod_array = ();

if (scalar(@ARGV)) {
    for my $Curr (@ARGV) {
        D("ARG = \"$Curr\"\n");
        diff_file($Curr);
    }
} else {
    if (open(PipeFP, "$CMD_SVN stat -q |")) {
        while (<PipeFP>) {
            chomp();
            D("<PipeFP> = \"$_\"\n");
            if (/^[$stat_chars]......(.*)/) {
                push(@mod_array, $1);
            }
        }
        close(PipeFP);
        for (sort @mod_array) {
            my $File = $_;
            diff_file($File);
        }
    } else {
        warn("$progname: Error opening \"$CMD_SVN stat -q\" pipe");
    }
}

sub diff_file {
    my $File1 = shift;
    my $Path = "";
    my $File = $File1;

    D("diff_file(\"$File1\");\n");

    if ($File =~ m#^(.*/)(.+?)$#) {
        $Path = $1;
        $File = $2;
    }

    my $File2 = "$Path.svn/text-base/$File.svn-base";
    D("File1 = \"$File1\"\n");
    D("File2 = \"$File2\"\n");

    (-e $File1) || (warn("$File1: File not found\n"), return);
    (-e $File2) || (warn("$File2: File not found, is not under version control\n"), return);

    if ($Cmd eq "vimdiff") {
        D("CMD: $Cmd $File1 $File2\n");
        deb_wait();
        system("$Cmd $File1 $File2");
    } else {
        D("CMD: $Cmd $File2 $File1\n");
        deb_wait();
        system("$Cmd $File2 $File1");
    }

    # Sleep one second after $Cmd is done to make it easier to interrupt 
    # the thing with CTRL-C if there are many files
    sleep(1) if (scalar(@mod_array) > 1);
}

sub D {
    $Debug || return;
    chomp(my $Txt = shift);
    print("$Txt\n");
}

sub deb_wait {
    $Debug || return;
    print("debug: Press ENTER...");
    <STDIN>;
}

sub usage {
    # Send the help message to stdout {{{
    my $Retval = shift;
    print(<<END);

Usage: $progname [options] [file [...]]

Options:

-C    Only run diff on conflicted files.
-c x  Use x as the diff command. Default: "$Cmd".
-e x  Use x as the svn executable. Default: "$CMD_SVN".
-h    Show this help.
-p x  Use x as parameters to the diff program.

END
    exit($Retval);
    # }}}
}

__END__

# Plain Old Documentation (POD) {{{

=pod

=head1 NAME

svndiff

=head1 REVISION

$Id$

=head1 SYNOPSIS

svndiff [options] [file [...]]

=head1 DESCRIPTION

Run the diff program on every modified file in current directory and all 
subdirectories or on the files specified on the command line. Needs the 
svn command-line client unless files are specified.

=over 4

=item B<-C>

Only run diff on conflicted files.

=item B<-c> x

Use x as the diff command. Default: "svndiff".

=item B<-e> x

-e x  Use x as the svn executable.
Example:

  svndiff -e /usr/local/bin/svn-1.0

=item B<-p> x

Use x as parameters to the diff program.

=item B<-h>

Print a brief help summary.

=back

=head1 AUTHOR

Made by Øyvind A. Holm S<E<lt>sunny _AT_ sunbase.orgE<gt>>.

=head1 COPYRIGHT

Copyleft © Øyvind A. Holm &lt;sunny@sunbase.org&gt;
This is free software; see the file F<COPYING> for legalese stuff.

This file is part of the svnutils project — L<http://svnutils.tigris.org>

=head1 LICENCE

This program is free software; you can redistribute it and/or modify it 
under the terms of the GNU General Public License as published by the 
Free Software Foundation; either version 2 of the License, or (at your 
option) any later version.

This program is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along 
with this program; if not, write to the Free Software Foundation, Inc., 
59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

=head1 SEE ALSO

=cut

# }}}

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
# End of file $Id$
