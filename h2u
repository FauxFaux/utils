#!/usr/bin/perl -w

#=============================================================================
# $Id: h2u,v 1.2 2001/08/10 13:06:55 sunny Exp $
# Converts from numeric entities in HTML/SGML (&#x263A; and &#9786;) to UTF-8.
# If "-l" is specified as first parameter, also convert latin-1 characters.
# Created by &#xD8;yvind A. Holm <sunny256@mail.com>. License: GNU GPL.
#=============================================================================

use strict;

my $conv_latin = 0;
defined($ARGV[0]) && ($ARGV[0] =~ /^-l$/) && ($conv_latin = 1, shift);

while (<>) {
	$conv_latin && s/([\x80-\xFF])/widechar(ord($1))/ge;
	s/&#(\d{1,10});/widechar($1)/ge;
	s/&#x([0-9a-f]{1,8});/widechar(hex($1))/gei;
	print;
}

sub widechar {
	my $Val = shift;
	if ($Val < 0x80) {
		return sprintf("%c", $Val);
	} elsif ($Val < 0x800) {
		return sprintf("%c%c", 0xC0 | ($Val >> 6),
		                       0x80 | ($Val & 0x3F));
	} elsif ($Val < 0x10000) {
		return sprintf("%c%c%c", 0xE0 |  ($Val >> 12),
		                         0x80 | (($Val >>  6) & 0x3F),
		                         0x80 |  ($Val        & 0x3F));
	} elsif ($Val < 0x200000) {
		return sprintf("%c%c%c%c", 0xF0 |  ($Val >> 18),
		                           0x80 | (($Val >> 12) & 0x3F),
		                           0x80 | (($Val >>  6) & 0x3F),
		                           0x80 |  ($Val        & 0x3F));
	} elsif ($Val < 0x4000000) {
		return sprintf("%c%c%c%c%c", 0xF8 |  ($Val >> 24),
		                             0x80 | (($Val >> 18) & 0x3F),
		                             0x80 | (($Val >> 12) & 0x3F),
		                             0x80 | (($Val >>  6) & 0x3F),
		                             0x80 | ( $Val        & 0x3F));
	} elsif ($Val < 0x80000000) {
		return sprintf("%c%c%c%c%c%c", 0xFC |  ($Val >> 30),
		                               0x80 | (($Val >> 24) & 0x3F),
		                               0x80 | (($Val >> 18) & 0x3F),
		                               0x80 | (($Val >> 12) & 0x3F),
		                               0x80 | (($Val >>  6) & 0x3F),
		                               0x80 | ( $Val        & 0x3F));
	} else {
		return widechar(0xFFFD);
	}
} # widechar()

__END__
