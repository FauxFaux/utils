#!/usr/bin/perl -w

#=======================================================
# $Id: find_inv_utf8,v 1.2 2004/02/13 00:32:48 sunny Exp $
# Read lines from stdin and print those who contains
# eight-bit characters not encoded in UTF-8.
#=======================================================

use strict;
use Getopt::Std;

our ($opt_h, $opt_s) =
    (     0,      0);

getopts('hs');

if ($opt_h) {
	print(<<END);

Syntax: $0 [valg]

Leser linjer fra stdin og skriver ut de som inneholder ulovlig UTF-8.
Knall 책 bruke for 책 finne filnavn med gammeldagse navn.

Valg:

  -s  Omvendt, skipp de som inneholder ulovlig UTF-8 og bare skriv ut
      de med gyldig UTF-8.

END
	exit(0);
}

# Warning: Does not barf on overlong sequences.

# Dobbelt opp for 책 f책 opp farta.

if ($opt_s) {
	while (<>) {
		my $Orig = $_;
		s/([\xFC-\xFD][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xF8-\xFB][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xF0-\xF7][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xE0-\xEF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xC0-\xDF][\x80-\xBF])//g;
		print $Orig unless (/[\x80-\xFF]/);
	}
} else {
	while (<>) {
		my $Orig = $_;
		s/([\xFC-\xFD][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xF8-\xFB][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xF0-\xF7][\x80-\xBF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xE0-\xEF][\x80-\xBF][\x80-\xBF])//g;
		s/([\xC0-\xDF][\x80-\xBF])//g;
		print $Orig if (/[\x80-\xFF]/);
	}
}

__END__
