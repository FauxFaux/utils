.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SVNDIFF 1"
.TH SVNDIFF 1 "2005-05-11" "perl v5.8.4" "User Contributed Perl Documentation"
.SH "NAME"
svndiff
.SH "REVISION"
.IX Header "REVISION"
$Id: svndiff 137 2005\-05\-11 07:25:44Z sunny256 $
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
svndiff [options] [file [...]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Run the diff program on every modified file in current directory and all 
subdirectories or on the files specified on the command line.
Needs the svn command-line client unless files are specified.
.IP "\fB\-C\fR, \fB\-\-conflict\fR" 4
.IX Item "-C, --conflict"
Only run diff on conflicted files.
.IP "\fB\-c\fR, \fB\-\-diffcmd\fR x" 4
.IX Item "-c, --diffcmd x"
Use x as the diff command.
Default: \*(L"svndiff\*(R".
.IP "\fB\-e\fR, \fB\-\-svncmd\fR x" 4
.IX Item "-e, --svncmd x"
Use x as the svn executable.
Example:
.Sp
.Vb 1
\&  svndiff -e /usr/local/bin/svn-1.0
.Ve
.IP "\fB\-p\fR, \fB\-\-diffargs\fR x" 4
.IX Item "-p, --diffargs x"
Use x as parameters to the diff program.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print a brief help summary.
.IP "\fB\-r\fR, \fB\-\-revision\fR x" 4
.IX Item "-r, --revision x"
Run the external diff command against previous revisions:
.Sp
.Vb 4
\&  111:222
\&    Compare r111 and r222.
\&  123
\&    Compare your working file against r123.
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "\fI~/.svndiffrc\fR" 4
.IX Item "~/.svndiffrc"
A configuration file where you can store your own settings.
It is a standard \s-1XML\s0 file with this structure:
.Sp
.Vb 11
\&  <svndiffrc>
\&    <diffprog>vimdiff</diffprog>
\&    <svnclient>svn</svnclient>
\&    <reversediffs>
\&      <program>
\&        <name>vimdiff</name>
\&        <reverse>1</reverse>
\&      </program>
\&      <!-- Several "program" element groups can be specified -->
\&    </reversediffs>
\&  </svndiffrc>
.Ve
.Sp
(Whitespace and linebreaks are optional.)
.Sp
The string inside the \f(CW\*(C`diffprog\*(C'\fR elements can be set to whatever your 
diff program is called as, the default string is \*(L"vimdiff\*(R".
.Sp
You can also define an alternative \fIsvn\fR\|(1) client to use inside the 
\&\f(CW\*(C`svnclient\*(C'\fR elements.
The default value here is of course \*(L"svn\*(R".
.Sp
When using visual diff viewers (for example \fBvimdiff\fR), the program 
sometimes expects the file names to be switched on the command line so 
your modified file appears in the correct window.
By creating a \f(CW\*(C`<program></program>\*(C'\fR section, programs 
can be instructed to take arguments the opposite way.
If you for example use the \fBmeld\fR program and you want your modified 
file to be in the left window, add this to the file (\fIinside\fR the 
\&\f(CW\*(C`<reversediffs></reversediffs>\*(C'\fR elements):
.Sp
.Vb 4
\&  <program>
\&    <name>meld</name>
\&    <reverse>1</reverse>
\&  </program>
.Ve
.Sp
The value in the \f(CW\*(C`reverse\*(C'\fR element have to be \fB1\fR, all other values 
will count as \fB0\fR.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.IP "\fI\s-1SVNDIFFRC\s0\fR" 4
.IX Item "SVNDIFFRC"
Path to a configuration file in another location than \fI~/.svndiffrc\fR .
.SH "AUTHOR"
.IX Header "AUTHOR"
Made by Øyvind A. Holm <sunny\ _AT_\ sunbase.org>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyleft © Øyvind A. Holm &lt;sunny@sunbase.org&gt;
This is free software; see the file \fI\s-1COPYING\s0\fR for legalese stuff.
.PP
This file is part of the svnutils project — 
<http://svnutils.tigris.org>
.SH "LICENCE"
.IX Header "LICENCE"
This program is free software; you can redistribute it and/or modify it 
under the terms of the \s-1GNU\s0 General Public License as published by the 
Free Software Foundation; either version 2 of the License, or (at your 
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but 
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of 
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
See the \s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along 
with this program; if not, write to the Free Software Foundation, Inc., 
59 Temple Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIsvn\fR\|(1)
