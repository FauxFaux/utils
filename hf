#!/usr/bin/perl

# $Id: hf,v 1.7 1999/05/07 20:24:44 sunny Exp $
# Formatterer HTML-source med TAB'er

# Bugs: Hvis start+end-elementer står på samme linje, blir ikke innrykket
# rett. En eller annen rekursiv sjekk på linjene må kanskje gjøres.
# Foreløpig får man sette dem på hver sin linje.

use strict;
# require 'getopts.pl';
# &Getopts('hs');

# &print_help() if ($opt_h);

$| = 1;

my $Tabs = "";
my $tab_indent = 0;
my $orig_line = "";
my @Elements = (
	"applet", "blockquote", "body", "caption", "center", "colgroup",
	"div", "dl", "form", "frameset", "head", "html", "ol", "map",
	"noframes", "noscript", "select", "script", "style", "table", "td",
	"th", "tr", "ul"
);

while (<>) {
	my $Line = $_;
	my $Element = "";
	my $f = "";

	# $Line =~ $opt_s ? s/^\s+(.*?)\s+$/$1/ : s/^\t+(.*)/$1/;
	$Line =~ s/^\t+(.*)/$1/;
	for $f (@Elements) {
		if ($Line =~ m!</($f)([ >])!i) { # Hvis end-tag ble funnet...
			$Element = $1;
			$tab_indent--;
			$Tabs =~ s/\t$//;
			# $Line =~ s/($Element)/sprintf("\n%s%s", $Tabs, $1)/gei;
		}
	}
	my $out_line = sprintf("%s%s", $Tabs, $Line);
	$out_line =~ s/\s*$//g; # Fjern alle whitespace på slutten
	print "$out_line\n";
	for $f (@Elements) {
		if ($Line =~ m!<($f)([ >])!i) { # Hvis begin-tag ble funnet...
			$Element = $1;
			$tab_indent++;
			$Tabs .= "\t";
			# $Line =~ s/($Element)/sprintf("\n%s%s", $Tabs, $1)/gei;
		}
	}
}

sub print_help {
	print <<END;

Syntax: $0 [options] [files ...]

HTML source indenter

Options:
  -h  Print this help screen
  -s  Split block elements on separate lines (not finished yet)

END
} # print_help()

#### End of file $Id: hf,v 1.7 1999/05/07 20:24:44 sunny Exp $ ####
