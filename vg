#!/usr/bin/perl -w

#=======================================================================
# vg
# File ID: 58ece940-08f3-11de-ab14-000475e441b9
# View GPX files in gnuplot(1)
#
# Character set: UTF-8
# ©opyleft 2009– Øyvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 3 or later, see end of 
# file for legal stuff.
#=======================================================================

use strict;
use Getopt::Long;

$| = 1;

our $Debug = 0;

our %Std = (

    'label-file' => "$ENV{'HOME'}/gps/poi/labels.gnuplot",
    'with' => 'l',

);

our %Opt = (

    '2d' => 0,
    'debug' => 0,
    'help' => 0,
    'label-file' => "$Std{'label-file'}",
    'time' => 0,
    'verbose' => 0,
    'version' => 0,
    'with' => $Std{'with'},

);

our $progname = $0;
$progname =~ s/^.*\/(.*?)$/$1/;
our $VERSION = "0.00";

my @cmdl = @ARGV;

Getopt::Long::Configure("bundling");
GetOptions(

    "2d|2" => \$Opt{'2d'},
    "debug" => \$Opt{'debug'},
    "help|h" => \$Opt{'help'},
    "label-file|l=s" => \$Opt{'label-file'},
    "time|t" => \$Opt{'time'},
    "verbose|v+" => \$Opt{'verbose'},
    "version" => \$Opt{'version'},
    "with|w=s" => \$Opt{'with'},

) || die("$progname: Option error. Use -h for help.\n");

$Opt{'debug'} && ($Debug = 1);
$Opt{'help'} && usage(0);
if ($Opt{'version'}) {
    print_version();
    exit(0);
}

($Opt{'2d'} && $Opt{'time'}) && die("$progname: Cannot mix --2d and --time options\n");
($Opt{'with'} =~ /^(d|l|lp|p)$/) || die("$progname: $Opt{'with'}: Invalid value of --with option, see $progname -h for help\n");

my $cmdl_str = join(" ", @cmdl);

if ($Opt{'time'}) {
    my $dat_file = "/tmp/vg-t.tmp";
    open(FP, ">$dat_file") || die("$progname: $dat_file: Cannot open file for write: $!\n");
    my @gpst_array = ("gpst", "-o", "csv", "-rt", "-e", "-d", "-t", @ARGV, "|", "rmspcall", "|", "uniq");
    print(FP `@gpst_array`);
    close(FP);
    my $cmd_file = "/tmp/vg-t-cmd.tmp";
    open(FP, ">$cmd_file") || die("$progname: $cmd_file: Cannot open file for write: $!\n");
    print(FP <<END);
set mouse
load "$Opt{'label-file'}"
set zdata time
# set timefmt "%Y-%m-%dT%H:%M:%SZ"
set timefmt "%s"
splot "$dat_file" using 2:3:1 w $Opt{'with'} palette
pause -1 "Trykk Enter..."
END
    close(FP);
    system("gnuplot -persist $cmd_file");
} elsif ($Opt{'2d'}) {
    my $dat_file = "/tmp/vg-2.tmp";
    open(FP, ">$dat_file") || die("$progname: $dat_file: Cannot open file for write: $!\n");
    my @gpst_array = ("gpst", "-o", "clean", "-rp", "-d", "-t", @ARGV, "|", "rmspcall", "|", "uniq");
    print(FP `@gpst_array`);
    close(FP);
    my $cmd_file = "/tmp/vg-2-cmd.tmp";
    open(FP, ">$cmd_file") || die("$progname: $cmd_file: Cannot open file for write: $!\n");
    print(FP <<END);
set mouse
load "$Opt{'label-file'}"
plot "$dat_file" using 1:2 w $Opt{'with'}
pause -1 "Trykk Enter..."
END
    close(FP);
    system("gnuplot -persist $cmd_file");
} else {
    my $dat_file = "/tmp/vg.tmp";
    open(FP, ">$dat_file") || die("$progname: $dat_file: Cannot open file for write: $!\n");
    my @gpst_array = ("gpst", "-o", "clean", "-ret", "-d", "-t", @ARGV, "|", "rmspcall", "|", "uniq");
    print(FP `@gpst_array`);
    close(FP);
    my $cmd_file = "/tmp/vg-cmd.tmp";
    open(FP, ">$cmd_file") || die("$progname: $cmd_file: Cannot open file for write: $!\n");
    print(FP <<END);
set mouse
load "$Opt{'label-file'}"
splot "$dat_file" w $Opt{'with'} palette
pause -1 "Trykk Enter..."
END
    close(FP);
    system("gnuplot -persist $cmd_file");
}

sub print_version {
    # Print program version {{{
    print("$progname v$VERSION\n");
    # }}}
} # print_version()

sub usage {
    # Send the help message to stdout {{{
    my $Retval = shift;

    if ($Opt{'verbose'}) {
        print("\n");
        print_version();
    }
    print(<<END);

Usage: $progname [options] [file [files [...]]]

Options:

  -2, --2d
    Create 2D plot instead of 3D. Bigger window by default in gnuplot, 
    and it’s faster when plotting lots of data.
  -h, --help
    Show this help.
  -l X, --label-file X
    Use X as label file.
    Default: $Std{'label-file'}
  -t, --time
    Use time as Z axis instead of elevation.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  -w X, --with X
    Use line type X:
      d  - dots
      l  - lines
      p  - points
      lp - lines with points
      Default: $Std{'with'}
  --version
    Print version information.
  --debug
    Print debugging messages.

END
    exit($Retval);
    # }}}
} # usage()

sub msg {
    # Print a status message to stderr based on verbosity level {{{
    my ($verbose_level, $Txt) = @_;

    if ($Opt{'verbose'} >= $verbose_level) {
        print(STDERR "$progname: $Txt\n");
    }
    # }}}
} # msg()

sub D {
    # Print a debugging message {{{
    $Debug || return;
    my @call_info = caller;
    chomp(my $Txt = shift);
    my $File = $call_info[1];
    $File =~ s#\\#/#g;
    $File =~ s#^.*/(.*?)$#$1#;
    print(STDERR "$File:$call_info[2] $$ $Txt\n");
    return("");
    # }}}
} # D()

__END__

# Plain Old Documentation (POD) {{{

=pod

=head1 NAME



=head1 SYNOPSIS

 [options] [file [files [...]]]

=head1 DESCRIPTION



=head1 OPTIONS

=over 4

=item B<-h>, B<--help>

Print a brief help summary.

=item B<-v>, B<--verbose>

Increase level of verbosity. Can be repeated.

=item B<--version>

Print version information.

=item B<--debug>

Print debugging messages.

=back

=head1 BUGS



=head1 AUTHOR

Made by Øyvind A. Holm S<E<lt>sunny@sunbase.orgE<gt>>.

=head1 COPYRIGHT

Copyleft © Øyvind A. Holm E<lt>sunny@sunbase.orgE<gt>
This is free software; see the file F<COPYING> for legalese stuff.

=head1 LICENCE

This program is free software: you can redistribute it and/or modify it 
under the terms of the GNU General Public License as published by the 
Free Software Foundation, either version 3 of the License, or (at your 
option) any later version.

This program is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along 
with this program.
If not, see L<http://www.gnu.org/licenses/>.

=head1 SEE ALSO

=cut

# }}}

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
