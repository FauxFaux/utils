#!/usr/bin/perl -w

#=======================================================================
# $Id$
# Quick & dirty script for converting gpsman(1) sdata files to GPX.
#
# Character set: UTF-8
# ©opyleft 2006– Øyvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License, see end of file for legal stuff.
#=======================================================================

BEGIN {
    push(@INC, "$ENV{'HOME'}/bin/src/gpstools");
}

use strict;
use Getopt::Long;

use GPSTxml;

$| = 1;

our $Debug = 0;

our %Opt = (
    'debug' => 0,
    'help' => 0,
    'version' => 0,
);

our $progname = $0;
$progname =~ s#^.*/(.*?)$#$1#;

my $rcs_id = '$Id$';
my $id_date = $rcs_id;
$id_date =~ s/^.*?\d+ (\d\d\d\d-.*?\d\d:\d\d:\d\d\S+).*/$1/;

Getopt::Long::Configure("bundling");
GetOptions(
    "debug" => \$Opt{'debug'},
    "help|h" => \$Opt{'help'},
    "version" => \$Opt{'version'},
) || die("$progname: Option error. Use -h for help.\n");

$Opt{'debug'} && ($Debug = 1);
$Opt{'help'} && usage(0);
$Opt{'version'} && print_version();

print(<<END);
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<gpx
  version="1.1"
  creator="gpsman2gpx - http://svn.sunbase.org/repos/utils/trunk/src/gpstools/gpsman2gpx"
  xmlns="http://www.topografix.com/GPX/1/1"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd"
>
  <!-- \$Id\$ -->
END

while (<>) {
    my $Line = $_;
    if (
        $Line =~ /^
            (.*?)\t # name
            (.*?)\t # cmt
            (.*?)\t # some kind of worthless date
            ([NS].+?)\t # lat
            ([WE].+?)\t # lon
            (.*)    # lots of uninteresting stuff but with altitude
            $
        /x
    ) {
        my ($Name, $Cmt, $wl_date, $Lat, $Lon, $Rest) =
           (   $1,   $2,       $3,   $4,   $5,    $6);
        my $Ele = "";

        $Name = txt_to_xml($Name);
        $Cmt = txt_to_xml($Cmt);
        $Lat = conv_pos($Lat);
        $Lon = conv_pos($Lon);
        if ($Rest =~ /ele=([\d\.]+)\D/) {
            $Ele = 1.0 * $1;
        }
        print("  <wpt lat=\"$Lat\" lon=\"$Lon\">\n");
        print("    <ele>$Ele</ele>\n") if length($Ele);
        print("    <name>$Name</name>\n") if length($Name);
        print("    <cmt>$Cmt</cmt>\n") if length($Cmt);
        print("  </wpt>\n");
    }
}

print("</gpx>\n");

sub conv_pos {
    # {{{
    my $Retval = shift;

    if ($Retval =~ /^([NSWE])([0-9\.]+)$/) {
        my ($Pref, $Deg) = ($1, $2);
        $Retval = ($Pref =~ /[SW]/)
            ? 0-$Deg
            : $Deg;
    } else {
        warn("\"$Retval\": Invalid coordinate\n");
    }
    return $Retval;
    # }}}
}

sub print_version {
    # Print program version {{{
    print("$rcs_id\n");
    exit(0);
    # }}}
} # print_version()

sub usage {
    # Send the help message to stdout {{{
    my $Retval = shift;

    print(<<END);

$rcs_id

Usage: $progname [options] [file [files [...]]]

Options:

  -h, --help
    Show this help.
  --version
    Print version information.
  --debug
    Print debugging messages.

END
    exit($Retval);
    # }}}
} # usage()

sub D {
    # Print a debugging message {{{
    $Debug || return;
    my @call_info = caller;
    chomp(my $Txt = shift);
    my $File = $call_info[1];
    $File =~ s#\\#/#g;
    $File =~ s#^.*/(.*?)$#$1#;
    print(STDERR "$File:$call_info[2] $$ $Txt\n");
    return("");
    # }}}
} # D()

__END__

# Plain Old Documentation (POD) {{{

=pod

=head1 NAME



=head1 REVISION

$Id$

=head1 SYNOPSIS

 [options] [file [files [...]]]

=head1 DESCRIPTION



=head1 OPTIONS

=over 4

=item B<-h>, B<--help>

Print a brief help summary.

=item B<--version>

Print version information.

=item B<--debug>

Print debugging messages.

=back

=head1 BUGS



=head1 AUTHOR

Made by Øyvind A. Holm S<E<lt>sunny@sunbase.orgE<gt>>.

=head1 COPYRIGHT

Copyleft © Øyvind A. Holm &lt;sunny@sunbase.org&gt;
This is free software; see the file F<COPYING> for legalese stuff.

=head1 LICENCE

This program is free software; you can redistribute it and/or modify it 
under the terms of the GNU General Public License as published by the 
Free Software Foundation; either version 2 of the License, or (at your 
option) any later version.

This program is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along 
with this program; if not, write to the Free Software Foundation, Inc., 
59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

=head1 SEE ALSO

=cut

# }}}

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
# End of file $Id$
