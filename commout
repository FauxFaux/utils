#!/usr/bin/perl

# Kommenterer ut stdin.
# $Id$

$prog_name = "commout";

if ($#ARGV > -1) {
    $_ = $ARGV[0];
    /^--h/ && &print_help(0) ||
    /^html$/i && ($is_html = 1) ||
    /^pre$/i && ($is_pre = 1) ||
    /^re$/i && ($is_re = 1, $is_pre = 1) ||
    /^c$/i && ($is_c = 1) ||
    ($comm_pattern = $ARGV[0]);
} else {
    $comm_pattern = '#';
}

length($ARGV[1]) && ($spc_str = " ");

$is_html && print("<!--$spc_str" . $ARGV[1] . " \x7B\x7B\x7B\n") ||
$is_pre && printf("%s<pre>\n", $is_re ? "" : "<p>") ||
$is_c && printf("/*$spc_str" . $ARGV[1] . "\n");

while (<STDIN>) {
    ($is_html || $is_pre || $is_c) || s/^(\t*)/$1$comm_pattern /;
    print;
    $Bck = $_;
}

if ($is_html || $is_c) {
    $Bck =~ /\n$/ || print(" "); # Hvis stdin ikke slutta med newline, skrives en space.
}

$is_html && print("\x7D\x7D\x7D -->\n") ||
$is_pre && print("</pre>\n") ||
$is_c && print(" */\n");

sub print_help {
    my $Retval = shift;

    print <<END;
Syntax:

$prog_name
  For bruk i bl.a. perl og sh. Setter '#' foran hver linje.

$prog_name html ["Overskrift"]
  HTML-source.

$prog_name pre
  OgsÃ¥ til html, men <p><pre> brukes istedenfor.

$prog_name re
  Som "pre", men uten <p> i begynnelsen.

$prog_name c
  C-kode. Setter inn /* */ .

$prog_name [andre_ting]
  Setter [andre_ting] foran hver linje.

END
    exit($Retval);
} # print_help()

# vim: set ts=4 sw=4 sts=4 et fenc=utf8 fo+=w2 :
#### End of file $Id$ ####
