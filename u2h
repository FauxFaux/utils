#!/usr/bin/perl -w

#=============================================================================
# $Id: u2h,v 1.2 2001/08/10 13:07:44 sunny Exp $
# Converts from UTF-8 charset to HTML numeric entities (&#x263A; and &#9786;).
# If "-l" is specified as first parameter, also convert latin-1 characters.
# Created by &#xD8;yvind A. Holm <sunny256@mail.com>. License: GNU GPL.
#=============================================================================

use strict;

my ($conv_latin, $use_decimal) = (0, 0);
defined($ARGV[0]) && ($ARGV[0] =~ /^-l/) && ($conv_latin = 1, shift);

while (<>) {
	s/([\xFC-\xFD][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])/decode_char($1)/ge;
	s/([\xF8-\xFB][\x80-\xBF][\x80-\xBF][\x80-\xBF][\x80-\xBF])/decode_char($1)/ge;
	s/([\xF0-\xF7][\x80-\xBF][\x80-\xBF][\x80-\xBF])/decode_char($1)/ge;
	s/([\xE0-\xEF][\x80-\xBF][\x80-\xBF])/decode_char($1)/ge;
	s/([\xC0-\xDF][\x80-\xBF])/decode_char($1)/ge;
	print;
}

# Warning: decode_char() accepts overlong sequences.

sub decode_char {
	my $Msg = shift;
	my $Retval = "";
	if ($Msg =~ /^([\xC0-\xDF])([\x80-\xBF])/) {
		my $Val = ((ord($1) & 0x1F) << 6) | (ord($2) & 0x3F);
		$Retval = ($conv_latin && ($Val <= 0xFF)) ? chr($Val) : sprintf("&#%u;", $Val);
	} elsif ($Msg =~ /^([\xE0-\xEF])([\x80-\xBF])([\x80-\xBF])/) {
		$Retval = join("", "&#",
		          ((ord($1) & 0x0F) << 12) |
		          ((ord($2) & 0x3F) <<  6) |
		          ( ord($3) & 0x3F), ";");
	} elsif ($Msg =~ /^([\xF0-\xF7])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])/) {
		$Retval = join("", "&#",
		          ((ord($1) & 0x07) << 18) |
		          ((ord($2) & 0x3F) << 12) |
		          ((ord($3) & 0x3F) <<  6) |
		          ( ord($4) & 0x3F), ";");
	} elsif ($Msg =~ /^([\xF8-\xFB])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])/) {
		$Retval = join("", "&#",
		          ((ord($1) & 0x03) << 24) |
		          ((ord($2) & 0x3F) << 18) |
		          ((ord($3) & 0x3F) << 12) |
		          ((ord($4) & 0x3F) <<  6) |
		          ( ord($5) & 0x3F), ";");
	} elsif ($Msg =~ /^([\xFC-\xFD])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])([\x80-\xBF])/) {
		$Retval = join("", "&#",
		          ((ord($1) & 0x01) << 30) |
		          ((ord($2) & 0x3F) << 24) |
		          ((ord($3) & 0x3F) << 18) |
		          ((ord($4) & 0x3F) << 12) |
		          ((ord($5) & 0x3F) <<  6) |
		          ( ord($6) & 0x3F), ";");
	}
	$Retval =~ s/&#(\d+);/sprintf("&#x%X;", $1)/ge unless ($use_decimal);
	return $Retval;
} # decode_char()

__END__
