ok - use FLDBpg;
ok - use FLDBsum;
ok - use FLDButf;
# ========== Executing "fldb.t" ==========
# Testing safe_sql()...
ok - safe_sql("") - Empty string
ok - safe_sql("abc") - Regular ASCII
ok - safe_sql("'") - Apostrophe
ok - safe_sql("\t\n\r") - TAB, LF and CR
ok - safe_sql("abc") - UTF-8
ok - safe_sql("a\0b") - Null byte
ok - safe_sql("\xF8") - Invalid UTF-8
# Testing valid_utf8()...
ok - valid_utf8("") - Empty string
ok - valid_utf8("abc") - Reglar ASCII
ok - valid_utf8("æ©☺") - Valid UTF-8
ok - valid_utf8("\xF8") - Invalid UTF-8
# Testing widechar()...
# Testing latin1_to_utf8()...
# Testing -d (--description) option...
ok - "../fldb -d Groovy -s files/dir1/random_2048" - Output SQL with description
ok - "../fldb -d Groovy -s files/dir1/random_2048" - Output SQL with description (stderr)
ok - "../fldb -d Yess -xs files/dir1/random_2048" - Output short XML from random_2048 with description and mtime
ok - "../fldb -d Yess -xs files/dir1/random_2048" - Output short XML from random_2048 with description and mtime (stderr)
ok - "../fldb -d "This is a description with spaces" -s files/dir1/random_2048" - Output SQL with description with space and apos
ok - "../fldb -d "This is a description with spaces" -s files/dir1/random_2048" - Output SQL with description with space and apos (stderr)
ok - "../fldb -d "Somewhat & weird < > yepp" -xs files/dir1/random_2048" - Output short XML from random_2048 with weird description and mtime
ok - "../fldb -d "Somewhat & weird < > yepp" -xs files/dir1/random_2048" - Output short XML from random_2048 with weird description and mtime (stderr)
# Testing -h (--help) option...
ok - "../fldb -h" - Option -h prints help screen
ok - "../fldb -h" - Option -h prints help screen (stderr)
ok - "../fldb -h" - No Id with only -h
# Testing -v (--verbose) option...
ok - "../fldb -hv" - Option --version with -h returns Id string and help screen
ok - "../fldb -hv" - Option --version with -h returns Id string and help screen (stderr)
# Testing --version option...
ok - "../fldb --version" - Option --version returns Id string
ok - "../fldb --version" - Option --version returns Id string (stderr)
ok - "../fldb -s files/dir1/random_2048" - Output short SQL from dir1/random_2048
ok - "../fldb -s files/dir1/random_2048" - Output short SQL from dir1/random_2048 (stderr)
# Testing -x (--xml) option...
ok - "../fldb -xs files/dir1/random_2048" - Output short XML from dir1/random_2048 with mtime
ok - "../fldb -xs files/dir1/random_2048" - Output short XML from dir1/random_2048 with mtime (stderr)
# Testing finished.
1..33
