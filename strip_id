#!/usr/bin/perl -w

#============================================================================
# $Id$
# Strips the " $","$Id: :" and "$Date: " fom RCS/CVS/Subversion keywords to
# protect it from changes when importing or adding the file to a new
# repository.
#
# Syntax: strip_id file [file [...]]
#
# Default behaviour at the moment (% = $):
#
#   "%Id: file.txt 123 2004-01-21 17:12:16Z fjodor %"
#     is changed to
#   "file.txt 123 2004-01-21 17:12:16Z fjodor"
#
#   "%Date: 2004-05-18 10:44:54 +0200 (Tue, 18 May 2004) %"
#     is changed to
#   "2004-05-18 10:44:54 +0200"
#
# Character set:
#   UTF-8
# Project page:
#   http://svnutils.tigris.org
# Subversion repository:
#   http://svn.sunbase.org/repos/svnutils
# License:
#   GNU General Public License
# Authors:
#   Use "svn blame" or "svn log" against the Subversion repository to
#   nail the responsible guys. As of 2004-06-07, it is only:
#     - sunny, Ã˜yvind A. Holm <sunny@sunbase.org>
#============================================================================

use strict;

$| = 1;

my $rand_ext = "$$." . substr(rand, 2, 8);
while (defined($ARGV[0])) {
	my $Curr = shift;
	my $Dest = "$Curr.$rand_ext.tmp";
	if (open(FromFP, $Curr)) {
		(-e $Dest) && die("$Dest: What??? File already exists!");
		if (open(ToFP, ">$Dest")) {
			while (<FromFP>) {
				$_ = process_line($_);
				print(ToFP $_);
			}
			close(FromFP);
			close(ToFP);
			rename($Dest, $Curr) || warn("rename($Dest, $Curr): $!");
		} else {
			warn("$Dest: Unable to create file: $!");
		}
	} else {
		warn("$Curr: Unable to open file for read: $!");
	}
}

sub process_line {
	my $Retval = shift;
	$Retval =~ s/(\$Date: .*?)\(..., \d+ ... \d\d\d\d\) (\$)/$1$2/g;
	$Retval =~ s/\$(Id|Date): (.*?) \$/$2/g;
	return($Retval);
}

__END__

# vim: set fileencoding=UTF-8 filetype=perl foldmethod=marker foldlevel=0 :
# End of file $Id$
