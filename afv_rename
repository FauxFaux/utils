#!/usr/bin/perl -w

#===============================================================
# $Id: afv_rename,v 1.4 2004/04/12 20:06:14 sunny Exp $
# Leser filnavn fra stdin og skifter navn på dem fra gammelt
# afv-format (epoch) til ååååmmddTttmmssZ . Virker forsåvidt på
# alle filer som begynner med et 9- eller 10-sifret nummer.
#
# Character set: UTF-8
# License: GNU General Public License
# ©opyleft 2004 Øyvind A. Holm <sunny@sunbase.org>
#===============================================================

use strict;
use Getopt::Std;

our ($opt_v) =
    (     0);
getopts('v');

$| = 1;

while (<>) {
	chomp();
	if (/^(.*)\/([^\/]+?)$/) {
		my ($Path, $File) =
		   (   $1,    $2);

		if ($File =~ /^(.*?)\b(\d{9,10})\b(.*)$/) {
			my ($First, $Num, $Rest) =
			   (    $1,   $2,    $3);
			my $From = "$Path/$File";
			if (-f $From) {
				my @TA = gmtime($Num);
				my $date_str = sprintf("%04u%02u%02uT%02u%02u%02uZ", $TA[5]+1900, $TA[4]+1, $TA[3], $TA[2], $TA[1], $TA[0]);
				my $Dest = "$Path/$First$date_str$Rest";
				unless (-e $Dest) {
					if (rename($From, $Dest)) {
						$opt_v && print("$From → $Dest\n");
					} else {
						warn("rename(\"$From\", \"$Dest\"): $!\n");
					}
				} else {
					warn("$Dest: File exists.\n");
				}
			} else {
				warn("Ignoring non-regular file $From\n");
			}
		}
	}
}

__END__

# vim: set fileencoding=UTF-8 filetype=perl foldmethod=marker foldlevel=0 :
# End of file $Id: afv_rename,v 1.4 2004/04/12 20:06:14 sunny Exp $
