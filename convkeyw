#!/usr/bin/perl -w

#=======================================================================
# $Id$
# Strips the " $", "$Id: :" and "$Date: " from RCS/CVS/Subversion 
# keywords to protect it from changes when importing or adding the file 
# to a new repository.
#
# Character set: UTF-8
# License: GNU General Public License
# Author: Øyvind A. Holm <sunny@sunbase.org>
# This file is part of the svnutils package — http://svnutils.tigris.org
#=======================================================================

use strict;
use Getopt::Std;

our $opt_h = 0;
getopts('h') || die("Option error, use -h for help");

$opt_h && usage(0);

$| = 1;

my $rand_ext = "$$." . substr(rand, 2, 8);
while (defined($ARGV[0])) {
    my $Curr = shift;
    my $Dest = "$Curr.$rand_ext.tmp";
    if (open(FromFP, $Curr)) {
        (-e $Dest) && die("$Dest: What??? File already exists!");
        if (open(ToFP, ">$Dest")) {
            while (<FromFP>) {
                $_ = process_line($_);
                print(ToFP $_);
            }
            close(FromFP);
            close(ToFP);
            rename($Dest, $Curr) || warn("rename($Dest, $Curr): $!");
        } else {
            warn("$Dest: Unable to create file: $!");
        }
    } else {
        warn("$Curr: Unable to open file for read: $!");
    }
}

sub process_line {
    my $Retval = shift;
    $Retval =~ s/(\$Date: .*?)\(..., \d+ ... \d\d\d\d\) (\$)/$1$2/g;
    $Retval =~ s/\$(Id|Date): (.*?) \$/$2/g;
    return($Retval);
}

sub usage {
    print <<END

Syntax: convkeyw [options] file [file [...]]

Strips the " \$", "\$Id: :" and "\$Date: " from RCS/CVS/Subversion 
keywords to protect it from changes when importing or adding the file to 
a new repository.

Default behaviour at the moment:

    "\$Id: file.txt 123 2004-01-21 17:12:16Z fjodor \$"
    is changed to
    "file.txt 123 2004-01-21 17:12:16Z fjodor"

    "\$Date: 2004-05-18 10:44:54 +0200 (Tue, 18 May 2004) \$"
    is changed to
    "2004-05-18 10:44:54 +0200"

Options:

    -h  Print this help.

END
}

__END__

# vim: set et ts=4 sw=4 sts=4 fo+=w fo+=c fo-=t tw=72 :
# End of file $Id$
